/*!
* jquery.counterup.js 1.0 (Optimized)
*
* Copyright 2013, Benjamin Intal http://gambit.ph @bfintal
* Released under the GPL v2 License
*
* Date: Nov 26, 2013
*/

(function ($) {
    "use strict";

    $.fn.counterUp = function (options) {
        var settings = $.extend({ time: 400, delay: 10 }, options);

        return this.each(function () {
            var $this = $(this);
            var time = settings.time;
            var delay = settings.delay;

            var animateCount = function () {
                var numbers = [];
                var steps = time / delay;
                var i = ($this.text() || "0").replace(/,/g, ""); // Ensure string and remove commas

                var isComma = /[0-9]+,[0-9]+/.test(i);
                var isInt = /^[0-9]+$/.test(i);
                var isFloat = /^[0-9]+\.[0-9]+$/.test(i);
                var decimalPlaces = isFloat ? (i.split(".")[1] || []).length : 0;

                for (var step = steps; step >= 1; step--) {
                    var value = (i / steps) * step;
                    value = isFloat ? value.toFixed(decimalPlaces) : Math.round(value);

                    if (isComma) {
                        while (/(\d+)(\d{3})/.test(value.toString())) {
                            value = value.toString().replace(/(\d+)(\d{3})/, "$1,$2");
                        }
                    }

                    numbers.unshift(value);
                }

                $this.data("counterup-nums", numbers);
                $this.text("0");

                var updateCounter = function () {
                    $this.text($this.data("counterup-nums").shift());
                    if ($this.data("counterup-nums").length) {
                        setTimeout($this.data("counterup-func"), delay);
                    } else {
                        $this.data("counterup-nums", null);
                        $this.data("counterup-func", null);
                    }
                };

                $this.data("counterup-func", updateCounter);
                setTimeout($this.data("counterup-func"), delay);
            };

            // Waypoints.js trigger (Fixed)
            new Waypoint({
                element: $this[0], // Convert jQuery to native element
                handler: function () {
                    animateCount();
                    this.destroy(); // Prevent re-triggering
                },
                offset: "100%" // Start when fully in view
            });

        });
    };

})(jQuery);
